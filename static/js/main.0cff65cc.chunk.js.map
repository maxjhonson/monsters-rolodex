{"version":3,"sources":["logo.svg","components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/search-box.component.js","App.jsx","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","children","monsters","map","SearchBox","placeholder","handleChange","type","onChange","e","App","props","state","filter","text","console","log","this","setState","fetch","then","response","json","filteredMosters","toLocaleLowerCase","includes","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCgBAA,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAKJ,EAAQK,OACb,6BAAKL,EAAQM,YCNNC,G,MAAW,SAAC,GAA2B,EAAzBC,SAA0B,IAAhBC,EAAe,EAAfA,SACnC,OACE,qBAAKR,UAAU,YAAf,SACGQ,EAASC,KAAI,SAACV,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCNdO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,aACVa,KAAK,SACLF,YAAaA,EACbG,SAAU,SAACC,GAAD,OAAOH,EAAaG,QCgCrBC,E,kDAlCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEV,SAAU,GAAIW,OAAQ,IAFpB,E,gDAKnB,SAAaC,GACXC,QAAQC,IAAIF,GACZG,KAAKC,SAAS,CAAEL,OAAQC,M,+BAG1B,WAAqB,IAAD,OAClBK,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACC,GAAD,OAAc,EAAKH,SAAS,CAAEhB,SAAUmB,Y,oBAGjE,WAAU,IAAD,OACDE,EAAkBN,KAAKL,MAAMV,SAASW,QAAO,SAACpB,GAAD,OACjDA,EAAQK,KACL0B,oBACAC,SAAS,EAAKb,MAAMC,OAAOW,wBAEhC,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,aAAc,SAACG,GAAD,OAAO,EAAKS,SAAS,CAAEL,OAAQJ,EAAEiB,OAAOC,SACtDtB,YAAY,kBAEd,cAAC,EAAD,CAAUH,SAAUqB,W,GA7BVK,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0cff65cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card.styles.component.css\";\r\n\r\nconst Card = ({ monster }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h1>{monster.name}</h1>\r\n      <h2>{monster.email}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/card.component\";\r\n\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = ({ children, monsters }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.component.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search-box\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={(e) => handleChange(e)}\r\n    />\r\n  );\r\n};\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { monsters: [], filter: \"\" };\n  }\n\n  handleChange(text) {\n    console.log(text);\n    this.setState({ filter: text });\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\n      response.json().then((response) => this.setState({ monsters: response }))\n    );\n  }\n  render() {\n    const filteredMosters = this.state.monsters.filter((monster) =>\n      monster.name\n        .toLocaleLowerCase()\n        .includes(this.state.filter.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          handleChange={(e) => this.setState({ filter: e.target.value })}\n          placeholder=\"Search Moster\"\n        />\n        <CardList monsters={filteredMosters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}